<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.dgit.RentCar_Project.dao.UserDao">
	
	<resultMap id="UserResult" type="User">
		<id property="userCode" column="user_code"/>
		<result property="id" column="id"/>
		<result property="pw" column="pw"/>
		<result property="userName" column="user_name"/>
		<result property="userImg" column="user_image"/>
		<result property="phone" column="phone"/>
		<result property="email" column="email"/>
		<result property="grade.grade" column="grade"/>	
		<result property="addr" column="addr"/>		
	</resultMap>

	<sql id="selectSql">
		select user_code, id, pw, user_name, user_image, phone, email, gender, grade, addr from user
	</sql>
	
	<sql id="whereAllSql">
		<where>
			<if test="userCode != null">
				user_code = #{userCode}
			</if>
			<if test="id != null">
				and id = #{id}
			</if>
			<if test="pw != null">
				and pw = #{pw}
			</if>
			<if test="userName != null">
				and user_name = #{userName}
			</if>
			<if test="userImg != null">
				and user_image = #{userImg}
			</if>
			<if test="phone != null">
				and phone = #{phone}
			</if>
			<if test="email != null">
				and email = #{email}
			</if>
			<if test="gender != null">
				and gender = #{gender}
			</if>
			<if test="grade.grade != null">
				and grade = #{grade.grade}
			</if>
			<if test="addr != null">
				and addr = #{addr}
			</if>
		</where>
	</sql>
	
	<sql id="wherePrimarySql">
		<where>
			<if test="userCode != null">
				user_code = #{userCode}
			</if>
		</where>
	</sql>
	
	<sql id="insertSql">
		insert into user(id, pw, user_name, user_image, phone, email, gender, grade, addr) 
		values(#{id}, #{pw}, #{userName}, #{userImg}, #{phone}, #{email}, #{gender}, #{grade.grade}, #{addr})
	</sql>
		
	<sql id="deleteSql">
		delete from user
	</sql>
	
	<select id="selectUserByUserCode" parameterType="User" resultMap="UserResult">
		<include refid="selectSql"/>
		<include refid="wherePrimarySql"/>
	</select>
	
	<select id="selectUserByAll" resultMap="UserResult">
		<include refid="selectSql"/>
	</select>
	<select id="findUserCodeByUserCode" resultMap="UserResult">
		<include refid="selectSql"/>
		<include refid="wherePrimarySql"/>
	</select>
	
	<insert id="insertUser" parameterType="User">
		<include refid="insertSql"/>
	</insert>
	
	<update id="updateUser" parameterType="User">
		update user 
			<set>
				<if test="userCode != null">
					user_code = #{userCode},
				</if>
				<if test="id != null">
					id = #{id},
				</if>
				<if test="pw != null">
					pw = #{pw},
				</if>
				<if test="userName != null">
					user_name = #{userName},
				</if>
				<if test="userImg != null">
					user_image = #{userImg},
				</if>
				<if test="phone != null">
					phone = #{phone},
				</if>
				<if test="email != null">
					email = #{email},
				</if>
				<if test="gender != null">
					gender = #{gender},
				</if>
				<if test="grade.grade != null">
					grade = #{grade.grade},
				</if>
				<if test="addr != null">
					addr = #{addr},
				</if>
			</set>
		<include refid="wherePrimarySql"/>
	</update>
	
	<delete id="deleteUser" parameterType="User">
		<include refid="deleteSql"/>
		<include refid="wherePrimarySql"/>
	</delete>
</mapper>